Create "Warhammer Fantasy Tavern" - a comprehensive React-based web application that simulates an immersive fantasy tavern environment with AI-powered character interactions, building upon the established Suplementor V2 architecture and development patterns.
aby byly sceny, dialogi, watki, plotki
**Project Foundation & Architecture:**
- Initialize new React 18 + TypeScript project using Vite with identical configuration to Suplementor V2
- Implement standardized folder structure: `/src/components/tavern/`, `/src/stores/tavernStore.ts`, `/src/types/warhammer.types.ts`, `/src/hooks/useTavern.ts`
- Extend existing Suplementor V2 UI component library (Button, Card, Input, etc.) with tavern-specific components
- Configure Tailwind CSS with custom Warhammer Fantasy theme extending the base configuration
- Set up Polish language support as PRIMARY language using react-i18next with fantasy-appropriate terminology
aby byly sceny, dialogi, watki, plotki
**Character System Implementation (Priority 1 - Critical):**
Define exactly 17 Warhammer Fantasy characters with complete specifications:

*Empire Characters (3):*
- Captain Marcus Steiner: Grizzled veteran soldier, pragmatic, distrusts magic, speaks in military terms
- Wilhelm the Scribe: Scholarly chronicler, verbose, curious about lore, uses formal academic language  
- Greta Ironforge: Master blacksmith, direct, proud of craft, speaks with technical precision
aby byly sceny, dialogi, watki, plotki
*Dwarf Characters (3):*
- Thorek Ironbeard: Veteran ranger, taciturn, suspicious of outsiders, uses clan oaths in speech
- Balin Goldseeker: Shrewd merchant, calculating, gold-obsessed, speaks in trade terminology
- Grimm Oathkeeper: Honor-bound warrior, traditional, speaks of ancestors and grudges
aby byly sceny, dialogi, watki, plotki
*Elf Characters (3):*
- Aelindra Moonwhisper: High Elf mage, aloof, intellectually superior, uses archaic formal speech
- Silvyr Swiftarrow: Wood Elf scout, nature-focused, distrusts civilization, speaks in forest metaphors
- Malekith's Exile: Dark Elf rogue, bitter, cynical, uses cutting sarcasm and veiled threats
aby byly sceny, dialogi, watki, plotki
*Halfling Characters (3):*
- Rosie Greenhill: Tavern keeper, motherly, gossip-loving, speaks warmly with local idioms
- Pip Lightfingers: Reformed burglar, nervous, quick-witted, uses thieves' cant occasionally
- Merry Goodbarrel: Head cook, jolly, food-obsessed, speaks in culinary metaphors
aby byly sceny, dialogi, watki, plotki
*Human Variants (3):*
- Sir Gaston de Montfort: Bretonnian knight, chivalrous, honor-bound, speaks in courtly manner
- Lorenzo Medici: Tilean merchant, smooth-talking, opportunistic, uses business terminology
- Erik Bloodaxe: Norse berserker, boisterous, battle-hungry, speaks of glory and death
aby byly sceny, dialogi, watki, plotki
*Unique Characters (2):*
- Victor Saltzpyre: Witch Hunter, fanatical, suspicious, speaks in religious zealotry
- Sienna Fuegonasus: Bright Wizard, passionate, fire-obsessed, speaks with magical terminology
aby byly sceny, dialogi, watki, plotki
**Character Data Structure Requirements:**
```typescript
interface TavernCharacter {
  id: string;
  name: string;
  race: WarhammerRace;
  class: string;
  personalityTraits: [string, string, string, string, string]; // Exactly 5 traits
  backstory: string; // Exactly 200 words
  speechPatterns: {
    dialect: string;
    vocabulary: string[];
    tone: 'formal' | 'casual' | 'aggressive' | 'friendly' | 'mysterious';
    catchphrases: string[];
  };
  relationships: Record<string, RelationshipType>; // With all other 16 characters
  conversationPreferences: {
    favoriteTopics: string[];
    avoidedTopics: string[];
    initiationLikelihood: number; // 0-1 probability of starting conversations
  };
}aby byly sceny, dialogi, watki, plotki
```

**Real-Time Conversation Engine (Priority 2 - Critical):**
- Implement conversation orchestrator with precise timing:
  * Random conversation triggers every 90-300 seconds (configurable)
  * Topic relevance scoring algorithm (0-100 scale)
  * Relationship influence on participation probability
  * Tavern mood states: 'peaceful', 'tense', 'celebratory', 'mysterious'
- Conversation flow management:
  * Strict turn-based speaking queue (no interruptions)
  * Topic coherence maintained for 3-7 message exchanges
  * Natural conversation endings with transition phrases
  * Character-specific LLM prompts with 500-word context windows
- Memory system using IndexedDB with schema:
  ```typescript
  interface ConversationRecord {
    id: string;
    timestamp: Date;
    participants: string[];
    messages: ConversationMessage[];
    topicTags: string[];
    emotionalTone: 'positive' | 'negative' | 'neutral';
    plotRelevanceScore: number; // 0-10
    storyThreadIds: string[];
  }
  ```

**Story Generation & Persistence (Priority 3):**
- Dynamic story hook generator creating:
  * Quest rumors (20% probability per hour): treasure maps, monster bounties, missing persons
  * Character backstory reveals (gradual disclosure over 10+ conversations)
  * Ongoing plot threads (3-5 active threads maximum): political intrigue, supernatural events, festivals
  * Relationship developments tracked with numerical scores (-100 to +100)
- Persistent memory requirements:
  * Complete conversation history (unlimited storage with compression)
  * Character relationship evolution tracking with timestamps
  * Story thread continuity across browser sessions
  * Reference system for past events in new conversations

**Technical Implementation Specifications:**
- State Management: Zustand store with TypeScript interfaces matching Suplementor V2 patterns
- LLM Integration: Service layer with character-specific prompt templates (max 2000 tokens per request)
- Real-time Simulation: setTimeout-based conversation triggers for MVP (WebSocket-ready architecture)
- Data Persistence: IndexedDB wrapper with automatic cleanup (max 100MB storage)
- Performance Targets: <200ms conversation response time, <50MB memory usage

**UI/UX Design System:**
- Color Palette (exact hex values):
  * Primary: #2D2D2D (tavern wood), Secondary: #8B4513 (leather), Accent: #DAA520 (gold)
  * Text: #F5F5DC (parchment), Success: #228B22, Warning: #FF8C00, Error: #DC143C
- Typography Stack:
  * Headings: 'Cinzel' (Google Fonts), fallback: serif
  * Character Dialogue: 'Crimson Text', fallback: 'Times New Roman'
  * UI Elements: 'Inter', fallback: sans-serif
- Layout Specifications:
  * Desktop: Conversation area (65%), Character panel (20%), Story sidebar (15%)
  * Tablet: Conversation area (70%), Collapsible sidebars (30%)
  * Mobile: Full-width conversation with bottom sheet panels

**Core Features with Acceptance Criteria:**
1. Conversation Browser: Filter by character (multi-select), date range picker, topic tags, story relevance slider
2. Search System: Full-text search with regex support, result highlighting, export search results
3. Export Functionality: PDF with custom styling, JSON with full metadata, plain text summaries
4. Relationship Visualization: D3.js network graph with force-directed layout, interactive nodes
5. Tavern Chronicle: Timeline component with story milestones, character development markers

**Polish Language Implementation (HIGHEST PRIORITY):**
- Complete Polish translation for ALL user interface elements
- Fantasy-appropriate Polish terminology for Warhammer concepts
- Character dialogue in Polish with appropriate medieval/fantasy register
- Polish date/time formatting and cultural adaptations
- Translation namespace structure: `tavern.characters`, `tavern.conversations`, `tavern.stories`
- Minimum 500 translation keys covering all functionality

**Mobile Optimization Requirements:**
- Responsive breakpoints: 320px (mobile), 768px (tablet), 1024px (desktop)
- Touch interactions: Swipe navigation, long-press context menus, pinch-to-zoom for relationship graphs
- Performance: <3s initial load, 60fps animations, <100ms touch response
- Accessibility: WCAG 2.1 AA compliance, screen reader support, keyboard navigation

**Development Phases with Deliverables:**
- Phase 1 (Days 1-3): Character system, basic UI, Polish translations
- Phase 2 (Days 4-6): Conversation engine, LLM integration, memory persistence  
- Phase 3 (Days 7-9): Story generation, advanced features, mobile optimization
- Phase 4 (Days 10-12): Polish language refinement, accessibility, performance optimization

**Success Criteria (Measurable):**
- All 17 characters demonstrate unique personalities in blind testing
- Conversation history persists across browser restarts (100% reliability)
- Story threads maintain consistency over 50+ conversation cycles
- Mobile interface functions on 320px+ screens with <3s load time
- Export generates usable GM content (validated by tabletop gaming community)
- Polish language support covers 100% of user-facing text

**Technical Constraints & Requirements:**
- Reuse minimum 80% of Suplementor V2 component library
- Offline-first architecture with graceful API failure handling
- Storage management: Auto-cleanup when approaching 80% of 100MB limit
- LLM cost optimization: Context compression, response caching, request batching
- Browser compatibility: Chrome 90+, Firefox 88+, Safari 14+, Edge 90+

**Quality Assurance:**
- Unit tests for character personality consistency
- Integration tests for conversation flow
- Performance benchmarks for memory usage and response times
- Accessibility testing with screen readers
- Polish language review by native speakers
- Cross-browser compatibility testing